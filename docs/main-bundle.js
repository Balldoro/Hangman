!function(e){var t={};function s(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(i,a,function(t){return e[t]}.bind(null,a));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=1)}([function(e,t,s){},function(e,t,s){"use strict";s.r(t);s(0);var i={word:"",difficulty:"",possibleMistakes:10,madeMistakes:0,pressedKey:"",usedKeys:[],correctGuesses:[],updateWord(e){this.word=e},updateDifficulty(e){this.difficulty=e},updateMadeMistakes(){this.madeMistakes++},updatePossibleMistakes(e){this.possibleMistakes=Number(e)},updateKeys(e){this.pressedKey=e,this.usedKeys.push(e)},updateCorrectGuesses(e){this.correctGuesses.push(e)},reset(){this.word="",this.possibleMistakes=10,this.madeMistakes=0,this.pressedKey="",this.usedKeys=[],this.correctGuesses=[]}};var a=class{constructor(){this.gameBoard=document.querySelector(".hangman"),this.newGameView=document.querySelector(".new-game")}init(){this.reset(),this.showWordContainer(),this.showKeyboard(),this.showMistakesContainer()}showWordContainer(){const e=document.createElement("div");e.classList.add("word"),this.gameBoard.appendChild(e);for(let t=0;t<i.word.length;t++){const t=this.createPlaceholder();e.appendChild(t)}}createPlaceholder(){const e=document.createElement("div");return e.classList.add("word__placeholder"),e}putLetterIntoPlaceholder(e,t){document.querySelectorAll(".word__placeholder")[t].textContent=e}showMistakesContainer(){const e=this.createMistakesContainer();e.innerHTML=this.showMistakesMessage(),this.gameBoard.appendChild(e)}showMistakesMessage(){return`<span>You have used ${i.madeMistakes} of ${i.possibleMistakes} possible mistakes `}updateMistakesMessage(){document.querySelector(".mistakes").innerHTML=this.showMistakesMessage()}createMistakesContainer(){const e=document.createElement("div");return e.classList.add("mistakes"),e}showKeyboard(){const e=document.createElement("div");e.classList.add("keyboard"),this.gameBoard.appendChild(e),this.createKeys().forEach(t=>e.appendChild(t))}createKeys(){return"ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("").map(e=>{const t=document.createElement("button");return t.classList.add("keyboard__key"),t.textContent=e,t})}disableKey(e){e.classList.add("keyboard__key--disabled"),e.setAttribute("disabled",!0)}showWinView(){const e=this.createWinView();this.showRestartButton(e),this.gameBoard.appendChild(e)}createWinView(){const e=document.createElement("div");return e.classList.add("game-view--win"),e.innerHTML=`\n    <h2 class="game-view__title">You won!</h2>\n    <p class="game-view__text">You guessed the word\n    <span class="game-view__text--important">${i.word.toLowerCase()}\n    </span> in <span class="game-view__text--important">${i.usedKeys.length}</span> attempt</p>\n    `,e}showLostView(){const e=this.createLostView();this.showRestartButton(e),this.gameBoard.appendChild(e)}createLostView(){const e=document.createElement("div");return e.classList.add("game-view--lost"),e.innerHTML=`\n    <h2 class="game-view__title">You lost!</h2>\n    <p class="game-view__text">The word you were looking for was \n    <span class="game-view__text--important">${i.word.toLowerCase()}\n    </span></p>\n    <p class="game-view__text">You missed <span class="game-view__text--important">${i.word.length-i.correctGuesses.length}</span> letters</p>\n    `,e}showRestartButton(e){const t=this.createRestartButton();e.appendChild(t)}createRestartButton(){const e=document.createElement("button");return e.classList.add("btn","btn--restart"),e.textContent="Play again?",e.addEventListener("click",()=>this.restartView()),e}restartView(){this.reset(),this.gameBoard.appendChild(this.newGameView)}reset(){for(;this.gameBoard.firstChild;)this.gameBoard.removeChild(this.gameBoard.firstChild)}};var r=class{constructor(){this.view=new a}init(){document.querySelector(".keyboard").addEventListener("click",e=>this.handleOnClick(e))}handleOnClick(e){const t=e.target;"BUTTON"===t.tagName&&(i.updateKeys(t.textContent),this.view.disableKey(t),this.isKeyInWord(t))}isKeyInWord(e){-1===i.word.indexOf(e.textContent)?this.keyIsNotInWord():this.keyIsInWord(e)}keyIsNotInWord(){i.updateMadeMistakes(),this.view.updateMistakesMessage(),this.isGameLost()}keyIsInWord(e){i.word.split("").filter((t,s)=>{t===e.textContent&&(i.updateCorrectGuesses(t),this.view.putLetterIntoPlaceholder(t,s),this.isGameWon())})}isGameWon(){i.word.length===i.correctGuesses.length&&(this.view.reset(),this.view.showWinView())}isGameLost(){i.madeMistakes===i.possibleMistakes&&(this.view.reset(),this.view.showLostView())}};var n=class{async getWord(){const e=await fetch(`https://wordsapiv1.p.rapidapi.com/words/?random=true&lettersMin=3&lettersMax=12&frequencyMin=\n      ${i.difficulty}&frequencyMax=${i.difficulty+2}`,{method:"GET",headers:{"x-rapidapi-host":"wordsapiv1.p.rapidapi.com","x-rapidapi-key":"f4b6679e41msh7e4743b81b0a06fp153cdajsna84d3c50b660"}});return(await e.json()).word.toUpperCase()}};var o=class{constructor(){this.settings=document.querySelector(".settings"),this.keyboard=new r,this.view=new a,this.wordData=new n}startGame(){i.reset(),this.getSettings(),this.wordData.getWord().then(e=>{i.updateWord(e),this.view.init(),this.keyboard.init()})}getSettings(){i.updatePossibleMistakes(this.settings.mistakes.value),i.updateDifficulty(this.settings.difficulty.value),this.settings.reset()}};!function(){const e=new o;document.querySelector(".btn--start").addEventListener("click",t=>{t.preventDefault(),e.startGame()})}()}]);